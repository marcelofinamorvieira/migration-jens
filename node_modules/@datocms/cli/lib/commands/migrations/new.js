"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cli_utils_1 = require("@datocms/cli-utils");
const path_1 = require("path");
const find_nearest_file_1 = require("../../utils/find-nearest-file");
const lodash_1 = require("lodash");
const promises_1 = require("fs/promises");
const mkdirp = require("mkdirp");
const fs_1 = require("fs");
const jsTemplate = `
'use strict';

/** @param client { import("@datocms/cli/lib/cma-client-node").Client } */
module.exports = async (client) => {
  // DatoCMS migration script

  // For more examples, head to our Content Management API docs:
  // https://www.datocms.com/docs/content-management-api

  // Create an Article model:
  // https://www.datocms.com/docs/content-management-api/resources/item-type/create

  const articleModel = await client.itemTypes.create({
    name: 'Article',
    api_key: 'article',
  });

  // Create a Title field (required):
  // https://www.datocms.com/docs/content-management-api/resources/field/create

  const titleField = await client.fields.create(articleModel, {
    label: 'Title',
    api_key: 'title',
    field_type: 'string',
    validators: {
      required: {},
    },
  });

  // Create an Article record:
  // https://www.datocms.com/docs/content-management-api/resources/item/create

  const article = await client.items.create({
    item_type: articleModel,
    title: 'My first article!',
  });
}
`.trim();
const tsTemplate = `
import { Client } from '@datocms/cli/lib/cma-client-node';

export default async function(client: Client): Promise<void> {
  // DatoCMS migration script

  // For more examples, head to our Content Management API docs:
  // https://www.datocms.com/docs/content-management-api

  // Create an Article model:
  // https://www.datocms.com/docs/content-management-api/resources/item-type/create

  const articleModel = await client.itemTypes.create({
    name: 'Article',
    api_key: 'article',
  });

  // Create a Title field (required):
  // https://www.datocms.com/docs/content-management-api/resources/field/create

  const titleField = await client.fields.create(articleModel, {
    label: 'Title',
    api_key: 'title',
    field_type: 'string',
    validators: {
      required: {},
    },
  });

  // Create an Article record:
  // https://www.datocms.com/docs/content-management-api/resources/item/create

  const article = await client.items.create({
    item_type: articleModel,
    title: 'My first article!',
  });
}
`.trim();
class Command extends cli_utils_1.CmaClientCommand {
    async run() {
        var _a, _b, _c;
        const { NAME: scriptName } = this.parsedArgs;
        this.requireDatoProfileConfig();
        const config = this.datoProfileConfig;
        const template = ((_a = config.migrations) === null || _a === void 0 ? void 0 : _a.template)
            ? (0, path_1.resolve)((_b = config.migrations) === null || _b === void 0 ? void 0 : _b.template)
            : undefined;
        const migrationsDir = (0, path_1.resolve)(((_c = config.migrations) === null || _c === void 0 ? void 0 : _c.directory) || './migrations');
        let isTsProject = false;
        try {
            await (0, find_nearest_file_1.findNearestFile)('tsconfig.json');
            isTsProject = true;
        }
        catch { }
        const format = template
            ? (0, path_1.extname)(template).split('.').pop()
            : this.parsedFlags.js
                ? 'js'
                : this.parsedFlags.ts || isTsProject
                    ? 'ts'
                    : 'js';
        const migrationScriptPath = (0, path_1.join)(migrationsDir, `${Math.floor(Date.now() / 1000)}_${(0, lodash_1.camelCase)(scriptName)}.${format}`);
        this.startSpinner(`Writing "${(0, path_1.relative)(process.cwd(), migrationScriptPath)}"`);
        await mkdirp(migrationsDir);
        await (0, promises_1.writeFile)(migrationScriptPath, await this.migrationScriptContent(template, format), 'utf-8');
        this.stopSpinner();
        return migrationScriptPath;
    }
    async migrationScriptContent(template, format) {
        if (template) {
            return (0, fs_1.readFileSync)(template, 'utf-8');
        }
        return format === 'js' ? jsTemplate : tsTemplate;
    }
}
exports.default = Command;
Command.description = 'Create a new migration script';
Command.flags = {
    ...cli_utils_1.CmaClientCommand.flags,
    ts: cli_utils_1.oclif.Flags.boolean({
        description: 'Forces the creation of a TypeScript migration file',
        exclusive: ['js'],
    }),
    js: cli_utils_1.oclif.Flags.boolean({
        description: 'Forces the creation of a JavaScript migration file',
        exclusive: ['ts'],
    }),
    template: cli_utils_1.oclif.Flags.string({
        description: 'Start the migration script from a custom template',
    }),
};
Command.args = [
    {
        name: 'NAME',
        description: 'The name to give to the script',
        required: true,
    },
];
