import { Client, ClientConfigOptions, LogLevel } from '@datocms/cma-client-node';
import { DatoProfileConfigCommand } from './dato-profile-config-command';
export declare const logLevelMap: {
    readonly NONE: LogLevel.NONE;
    readonly BASIC: LogLevel.BASIC;
    readonly BODY: LogLevel.BODY;
    readonly BODY_AND_HEADERS: LogLevel.BODY_AND_HEADERS;
};
export declare type LogLevelFlagEnum = keyof typeof logLevelMap;
export declare const logLevelOptions: ("NONE" | "BASIC" | "BODY" | "BODY_AND_HEADERS")[];
export declare abstract class CmaClientCommand<T extends typeof CmaClientCommand.flags> extends DatoProfileConfigCommand<T> {
    static flags: {
        'api-token': import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        'log-level': import("@oclif/core/lib/interfaces").OptionFlag<"NONE" | "BASIC" | "BODY" | "BODY_AND_HEADERS">;
        'base-url': import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        profile: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        'config-file': import("@oclif/core/lib/interfaces").OptionFlag<string>;
    };
    protected client: Client;
    protected init(): Promise<void>;
    protected buildBaseClientInitializationOptions(): {
        apiToken: string;
        baseUrl: string | undefined;
        logLevel: LogLevel;
    };
    protected buildClient(config?: Partial<ClientConfigOptions>): Client;
    protected catch(err: Error & {
        exitCode?: number | undefined;
    }): Promise<void>;
}
