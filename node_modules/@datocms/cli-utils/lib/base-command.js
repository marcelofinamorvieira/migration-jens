"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseCommand = void 0;
const core_1 = require("@oclif/core");
const lodash_1 = require("lodash");
class BaseCommand extends core_1.Command {
    async init() {
        var _a, _b, _c, _d;
        await super.init();
        this.parsedOutput = await this.parse(this.ctor);
        this.parsedFlags = (_b = (_a = this.parsedOutput) === null || _a === void 0 ? void 0 : _a.flags) !== null && _b !== void 0 ? _b : {};
        this.parsedArgs = (_d = (_c = this.parsedOutput) === null || _c === void 0 ? void 0 : _c.args) !== null && _d !== void 0 ? _d : {};
    }
    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
    toErrorJson(err) {
        return { error: { message: err.message, ...err } };
    }
    startSpinner(action, status, opts) {
        if (this.jsonEnabled()) {
            return;
        }
        core_1.CliUx.ux.action.start(action, status, opts);
    }
    stopSpinner(message) {
        if (this.jsonEnabled()) {
            return;
        }
        core_1.CliUx.ux.action.stop(message);
    }
    printTable(data, primaryColumns, extendedColumns) {
        if (this.jsonEnabled()) {
            return;
        }
        core_1.CliUx.ux.table(data, Object.fromEntries([...primaryColumns, ...extendedColumns].map((key) => [
            key,
            {
                get: (e) => (0, lodash_1.get)(e, key),
                extended: extendedColumns.includes(key),
                header: key,
            },
        ])), {
            ...this.parsedFlags,
            printLine: this.log.bind(this),
        });
    }
}
exports.BaseCommand = BaseCommand;
BaseCommand.flags = {};
BaseCommand.enableJsonFlag = true;
